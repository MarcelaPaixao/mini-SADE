==28970== Memcheck, a memory error detector
==28970== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==28970== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==28970== Command: Resultados/Marcela/completo/prog Resultados/Marcela/completo/Casos/4
==28970== Parent PID: 28969
==28970== 
==28970== Conditional jump or move depends on uninitialised value(s)
==28970==    at 0x10986A: main (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970== 
==28970== Conditional jump or move depends on uninitialised value(s)
==28970==    at 0x10989A: main (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970== 
==28970== Conditional jump or move depends on uninitialised value(s)
==28970==    at 0x1098CA: main (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970== 
==28970== Conditional jump or move depends on uninitialised value(s)
==28970==    at 0x109901: main (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970== 
==28970== Conditional jump or move depends on uninitialised value(s)
==28970==    at 0x109919: main (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970== 
==28970== Conditional jump or move depends on uninitialised value(s)
==28970==    at 0x109A5B: main (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970== 
==28970== Conditional jump or move depends on uninitialised value(s)
==28970==    at 0x10BE34: CadastraSecretario (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970==    by 0x109612: CadastrarSecretarioMain (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970==    by 0x10988B: main (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970== 
==28970== Conditional jump or move depends on uninitialised value(s)
==28970==    at 0x10BE49: CadastraSecretario (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970==    by 0x109612: CadastrarSecretarioMain (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970==    by 0x10988B: main (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970== 
==28970== Invalid write of size 8
==28970==    at 0x109613: CadastrarSecretarioMain (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970==    by 0x10988B: main (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970==  Address 0xfffffffffffffff8 is not stack'd, malloc'd or (recently) free'd
==28970== 
==28970== 
==28970== Process terminating with default action of signal 11 (SIGSEGV)
==28970==  Access not within mapped region at address 0xFFFFFFFFFFFFFFF8
==28970==    at 0x109613: CadastrarSecretarioMain (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970==    by 0x10988B: main (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970==  If you believe this happened as a result of a stack
==28970==  overflow in your program's main thread (unlikely but
==28970==  possible), you can try to increase the size of the
==28970==  main thread stack using the --main-stacksize= flag.
==28970==  The main thread stack size used in this run was 8388608.
==28970== 
==28970== HEAP SUMMARY:
==28970==     in use at exit: 8,428 bytes in 7 blocks
==28970==   total heap usage: 8 allocs, 1 frees, 8,436 bytes allocated
==28970== 
==28970== 196 bytes in 1 blocks are definitely lost in loss record 5 of 7
==28970==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==28970==    by 0x10BC63: CadastraSecretario (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970==    by 0x109612: CadastrarSecretarioMain (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970==    by 0x10988B: main (in /home/mcpaixao/trab2/Resultados/Marcela/completo/prog)
==28970== 
==28970== LEAK SUMMARY:
==28970==    definitely lost: 196 bytes in 1 blocks
==28970==    indirectly lost: 0 bytes in 0 blocks
==28970==      possibly lost: 0 bytes in 0 blocks
==28970==    still reachable: 8,232 bytes in 6 blocks
==28970==         suppressed: 0 bytes in 0 blocks
==28970== Reachable blocks (those to which a pointer was found) are not shown.
==28970== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==28970== 
==28970== Use --track-origins=yes to see where uninitialised values come from
==28970== For lists of detected and suppressed errors, rerun with: -s
==28970== ERROR SUMMARY: 46 errors from 10 contexts (suppressed: 0 from 0)
